#name: CI
#
#on: [push]
#
#jobs:
#  ecr-deploy:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Notify slack start
#      id: slack-start
#      uses: mahlstrom/actions2slack@v6
#      with:
#        github-run-id: $GITHUB_RUN_ID
#        status: 'STARTED'
#        slack-token: ${{ secrets.SLACK_TOKEN }}
#        slack-channel: 'bottest'
#
#    - uses: Terranovax/aws-ecr-deploy@v1
#      with:
#        access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        account_id: ${{ secrets.AWS_ACCOUNT_ID }}
#        region: eu-west-1
#        repo: podplayadmin-test-dev
#        tags: latest,${{ github.sha }}
#
#    - name: Render Amazon ECS task definition
#      id: render-web-container
#      uses: aws-actions/amazon-ecs-render-task-definition@v1
#      with:
#        task-definition: task-definition.json
#        container-name: web
#        image: amazon/amazon-ecs-sample:latest
#
#    - name: Deploy to Amazon ECS service
#      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#      with:
#        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
#        service: my-service
#        cluster: my-cluster
#
#
#    - name: Slack if success
#      id: slack-success
#      uses: mahlstrom/actions2slack@v6
#      with:
#        github-run-id: $GITHUB_RUN_ID
#        status: 'SUCCEEDED'
#        slack-token: ${{ secrets.SLACK_TOKEN }}
#        slack-channel: 'bottest'
#
#    - name: Slack if failed
#      if: ${{ failure() }}
#      id: slack-failed
#      uses: mahlstrom/actions2slack@v6
#      with:
#        github-run-id: $GITHUB_RUN_ID
#        status: 'FAILED'
#        slack-token: ${{ secrets.SLACK_TOKEN }}
#        slack-channel: 'bottest'
